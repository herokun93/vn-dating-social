spring.application.name=api-gateway
eureka.client.serviceUrl.defaultZone=http://eureka:password@localhost:8761/eureka
logging.level.root= INFO
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator= INFO
logging.level.org.springframework.cloud.gateway= TRACE

#logging.level.org.springframework.cloud.gateway= DEBUG

server.port=1994
server.compression.enabled=true

spring.datasource.url= jdbc:postgresql://localhost:5432/api-gateway
spring.datasource.username= postgres
spring.datasource.password= 2607

#spring.datasource.url=jdbc:postgresql://localhost:5432/social-service
#spring.datasource.username=postgres
#spring.datasource.password=2607

#spring.datasource.social.url= jdbc:postgresql://localhost:5432/social-service
#spring.datasource.social.username= postgres
#spring.datasource.social.password= 2607

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update




## Product Service Route
spring.cloud.gateway.routes[0].id=product-service
spring.cloud.gateway.routes[0].uri=lb://product-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/product


## Discover Server Route
spring.cloud.gateway.routes[1].id=discovery-server
spring.cloud.gateway.routes[1].uri=http://localhost:8761
spring.cloud.gateway.routes[1].predicates[0]=Path=/eureka/web
spring.cloud.gateway.routes[1].filters[0]=SetPath=/

## Discover Server Static Resources Route
spring.cloud.gateway.routes[2].id=discovery-server-static
spring.cloud.gateway.routes[2].uri=http://localhost:8761
spring.cloud.gateway.routes[2].predicates[0]=Path=/eureka/**

## Order Service Auth
spring.cloud.gateway.routes[3].id=auth-service
spring.cloud.gateway.routes[3].uri=lb://auth-service
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/auth/*


## Service social
spring.cloud.gateway.routes[4].id=social-service
spring.cloud.gateway.routes[4].uri=lb://social-service
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/v1/social/**

## Service Chat
spring.cloud.gateway.routes[5].id=chat-service
spring.cloud.gateway.routes[5].uri=lb://chat-service
spring.cloud.gateway.routes[5].predicates[0]=Path=/api/v1/chat/**
spring.cloud.gateway.routes[5].predicates[1]=Path=/ws

## Service social
spring.cloud.gateway.routes[6].id=social-media-service
spring.cloud.gateway.routes[6].uri=lb://social-media-service
spring.cloud.gateway.routes[6].predicates[0]=Path=/api/social/**

#spring.web.cors.allowed-origins=http://localhost:3000
#spring.web.cors.allowed-methods=GET,POST,PUT,DELETE
#spring.web.cors.allowed-headers=*
#spring.web.cors.allow-credentials=true

#spring.cloud.gateway.globalcors.corsConfigurations['[/**]'].allowedOrigins=*
#spring.cloud.gateway.globalcors.corsConfigurations['[/**]'].allowedMethods=GET,POST


#spring.cloud.gateway.globalcors.corsConfigurations.'[/**]'.allowedOrigins="http://localhost:3000"
#spring.cloud.gateway.globalcors.corsConfigurations.'[/**]'.allowedHeaders=*
#spring.cloud.gateway.globalcors.corsConfigurations.'[/**]'.allowedMethods=GET
#spring.cloud.gateway.discovery.locator.enabled=true


spring.security.oauth2.resourceserver.jwt.issuer-uri= http://localhost:8181/realms/dating-chat-oauth
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8181/realms/dating-chat-oauth/protocol/openid-connect/certs

spring.cloud.gateway.globalcors.add-to-simple-url-handler-mapping=true




#logging.level.org.keycloak=DEBUG
keycloak.enabled = true



keycloak.ssl-required=external


keycloak.auth-server-url=http://localhost:8181
keycloak.realm=dating-chat-oauth
keycloak.resource=dating-chat-oauth
keycloak.public-client=true
keycloak.credentials.secret=ulimal7ILgNHIDwUvu3QuEfx7QyTRos5


keycloak.securityConstraints[0].securityCollections[0].name = loggin
keycloak.securityConstraints[0].securityCollections[0].patterns[0] = /api/gateway/login


upload.directory=api-gateway/src/main/resources/uploads/

#keycloak.use-resource-role-mappings=true
#keycloak.ssl-required=external











#keycloak.admin.username=admin
#keycloak.admin.password=admin


#keycloak.bearer-only=true
#keycloak.security-constraints[0].authRoles[0]=user
#keycloak.security-constraints[0].authRoles[1]=admin
#keycloak.security-constraints[0].securityCollections[0].patterns[0]=/*



spring.main.web-application-type=reactive
spring.main.allow-bean-definition-overriding=true
spring.main.allow-circular-references=true

spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB


# Kafka Consumer Configuration
spring.kafka.consumer.bootstrap-servers=localhost:29092
spring.kafka.consumer.group-id=api-gateway
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Kafka Producer Configuration
spring.kafka.producer.bootstrap-servers=localhost:29092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer




